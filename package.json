{
  "name": "kubernetes-dashboard",
  "version": "2.0.0-beta3",
  "repository": {
    "type": "git",
    "url": "https://github.com/kubernetes/dashboard.git"
  },
  "license": "Apache-2.0",
  "scripts": {
    "start": "concurrently \"npm run start:backend --kubernetes-dashboard:sidecar_host=$npm_package_config_sidecar_host\" \"npm run start:frontend --kubernetes-dashboard:bind_address=$npm_package_config_bind_address\"",
    "start:https": "concurrently \"npm run start:backend:https\" \"npm run start:frontend:https\"",
    "start:frontend": "npm run postversion && ng serve --aot --progress=false --proxy-config aio/proxy.conf.json --host=$npm_package_config_bind_address",
    "start:frontend:https": "node aio/scripts/version.js && ng serve --progress=false --aot --proxy-config aio/https-proxy.conf.json --ssl --host=$npm_package_config_bind_address",
    "start:backend": "KUBECONFIG=${KUBECONFIG:-$npm_package_config_kubeconfig}; gulp serve --kubeconfig $KUBECONFIG --sidecarServerHost $npm_package_config_sidecar_host",
    "start:backend:https": "KUBECONFIG=${KUBECONFIG:-$npm_package_config_kubeconfig}; gulp serve --kubeconfig $KUBECONFIG --autoGenerateCerts true --sidecarServerHost $npm_package_config_sidecar_host",
    "start:prod": "npm run build && ./$npm_package_config_dashboard_binary_path --kubeconfig $npm_package_config_kubeconfig --locale-config $npm_package_config_dashboard_locale_config --auto-generate-certificates --bind-address $npm_package_config_bind_address --sidecar-host $npm_package_config_sidecar_host",
    "build": "./aio/scripts/build.sh",
    "build:cross": "./aio/scripts/build.sh -c",
    "build:frontend": "npm run clean && ng build --aot --prod --outputPath=$npm_package_config_frontend_build_dir",
    "build:backend": "npm run clean && gulp backend:prod",
    "build:backend:cross": "npm run clean && gulp backend:prod:cross",
    "docker:build": "npm run clean && npm run build:cross && gulp docker-image:release:cross",
    "docker:build:head": "npm run clean && npm run build:cross && gulp docker-image:head:cross",
    "docker:push": "npm run docker:build && gulp push-to-docker:release:cross",
    "docker:push:head": "npm run docker:build:head && gulp push-to-docker:head:cross",
    "cy:open": "npx cypress open",
    "cy:run": "npx cypress run",
    "test": "npm run test:frontend && npm run test:backend && npm run e2e",
    "test:frontend": "ng test --karma-config ./aio/karma.conf.js --watch=false",
    "test:frontend:coverage": "ng test --karma-config ./aio/karma.conf.js --watch=false --code-coverage",
    "test:frontend:watch": "ng test --karma-config ./aio/karma.conf.js",
    "test:backend": "go test github.com/kubernetes/dashboard/src/app/backend/...",
    "test:backend:coverage": "./aio/scripts/coverage-backend.sh",
    "test:coverage": "npm run test:frontend:coverage && npm run test:backend:coverage",
    "e2e": "concurrently -kill-others --success first \"npm run start\" \"wait-on http://localhost:8080 && npm run cy:run\"",
    "cluster:start": "./aio/scripts/start-cluster.sh",
    "cluster:stop": "./aio/scripts/stop-cluster.sh",
    "check": "concurrently \"npm run check:backend\" \"npm run check:frontend\" \"npm run check:license\" \"npm run check:i18n\"",
    "check:backend": "golangci-lint run -c .golangci.yml src/app/backend/...",
    "check:frontend": "concurrently \"npm run check:frontend:ts\" \"npm run check:frontend:scss\" \"npm run check:frontend:html\"",
    "check:frontend:ts": "gts check",
    "check:frontend:scss": "./aio/scripts/format.sh --styles --check && ./node_modules/sass-lint/bin/sass-lint.js -c .sass-lint.yml 'src/app/frontend/**/*.scss' -v -q",
    "check:frontend:html": "./aio/scripts/format.sh --html --check",
    "check:license": "gulp check-license-headers",
    "check:i18n": "ng xi18n --outFile ../i18n/messages.xlf && xliffmerge",
    "fix": "concurrently \"npm run fix:backend\" \"npm run fix:frontend\" \"npm run fix:license\" \"npm run fix:i18n\"",
    "fix:backend": "golangci-lint run -c .golangci.yml --fix src/app/backend/...",
    "fix:frontend": "concurrently \"npm run fix:frontend:ts\" \"npm run fix:frontend:scss\" \"npm run fix:frontend:html\"",
    "fix:frontend:ts": "gts fix",
    "fix:frontend:scss": "scssfmt -r 'src/**/*.scss'",
    "fix:frontend:html": "./aio/scripts/format.sh --html",
    "fix:license": "gulp update-license-headers",
    "fix:i18n": "ng xi18n --outFile ../i18n/messages.xlf && xliffmerge",
    "clean": "rm -rf .go_workspace .tmp coverage dist npm-debug.log",
    "postversion": "node aio/scripts/version.js",
    "postinstall": "node aio/scripts/version.js && command -v golangci-lint >/dev/null 2>&1 || { curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1; } && go mod download"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.ts": [
      "gts fix",
      "git add"
    ],
    "src/**/*.scss": [
      "scssfmt",
      "git add"
    ],
    "src/**/*.go": [
      "golangci-lint run -c .golangci.yml --fix",
      "git add"
    ],
    "src/**/*.html": [
      "./aio/scripts/pre-commit-i18n.sh",
      "git add"
    ]
  },
  "xliffmergeOptions": {
    "srcDir": "i18n",
    "genDir": "i18n",
    "defaultLanguage": "en",
    "languages": [
      "fr",
      "ja",
      "ko",
      "zh"
    ],
    "beautifyOutput": true
  },
  "dependencies": {
    "@angular/animations": "8.0.3",
    "@angular/cdk": "8.1.2",
    "@angular/common": "8.0.3",
    "@angular/compiler": "8.0.3",
    "@angular/core": "8.0.3",
    "@angular/flex-layout": "8.0.0-beta.26",
    "@angular/forms": "8.0.3",
    "@angular/http": "7.2.15",
    "@angular/material": "8.1.2",
    "@angular/platform-browser": "8.0.3",
    "@angular/platform-browser-dynamic": "8.0.3",
    "@angular/router": "8.0.3",
    "@types/c3": "0.7.1",
    "@types/d3": "5.7.2",
    "@types/d3-scale": "2.1.1",
    "@types/file-saver": "2.0.1",
    "@types/highlight.js": "^9.12.3",
    "ace-builds": "1.4.5",
    "c3": "0.7.3",
    "core-js": "3.1.4",
    "d3": "5.9.7",
    "file-saver": "2.0.2",
    "hammerjs": "2.0.8",
    "highlight.js": "^9.15.8",
    "js-yaml": "3.13.1",
    "material-design-icons": "3.0.1",
    "ng2-ace-editor": "0.3.9",
    "ngx-cookie-service": "2.2.0",
    "ngx-filter-pipe": "2.1.2",
    "normalize.css": "8.0.1",
    "roboto-fontface": "0.10.0",
    "rxjs": "6.5.2",
    "rxjs-compat": "6.5.2",
    "sockjs-client": "1.3.0",
    "web-animations-js": "2.3.2",
    "xterm": "3.14.5",
    "zone.js": "0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.801.1",
    "@angular/cli": "8.2.2",
    "@angular/compiler-cli": "8.0.3",
    "@angular/language-service": "8.0.3",
    "@types/jasmine": "3.4.0",
    "@types/jasminewd2": "2.0.6",
    "@types/js-yaml": "3.12.1",
    "@types/lodash": "4.14.136",
    "@types/node": "12.7.0",
    "babel": "6.23.0",
    "babel-preset-env": "1.7.0",
    "babel-register": "6.26.0",
    "codelyzer": "4.5.0",
    "concurrently": "4.1.1",
    "cypress": "3.3.2",
    "del": "5.0.0",
    "git-describe": "4.0.4",
    "gts": "1.1.0",
    "gulp": "4.0.2",
    "gulp-filter": "6.0.0",
    "gulp-header-license": "1.0.9",
    "gulp-license-check": "1.2.1",
    "husky": "3.0.3",
    "jasmine-core": "3.4.0",
    "jasmine-spec-reporter": "4.2.1",
    "js-beautify": "1.10.2",
    "karma": "4.2.0",
    "karma-chrome-launcher": "2.2.0",
    "karma-cli": "2.0.0",
    "karma-coverage-istanbul-reporter": "2.1.0",
    "karma-firefox-launcher": "1.1.0",
    "karma-jasmine": "2.0.1",
    "karma-jasmine-html-reporter": "1.4.2",
    "lint-staged": "9.2.1",
    "lite-server": "2.4.0",
    "lodash": "4.17.13",
    "minimatch": "3.0.4",
    "minimist": "1.2.0",
    "ngx-i18nsupport": "0.17.1",
    "node-gyp": "5.0.3",
    "node-sass": "4.12.0",
    "q": "1.5.1",
    "raw-loader": "1.0.0",
    "sass-lint": "1.13.1",
    "sass-loader": "7.1.0",
    "scssfmt": "1.0.7",
    "semver": "6.3.0",
    "source-map-explorer": "2.0.1",
    "tar": "4.4.8",
    "through2": "3.0.1",
    "ts-node": "8.3.0",
    "tslint": "5.16.0",
    "typescript": "3.4.5",
    "wait-on": "3.2.0",
    "webpack-dev-server": "3.5.1"
  },
  "engines": {
    "node": ">=10.9.0",
    "npm": ">=6.0.0"
  }
}
